---  
- name: Provision an EC2 node
  hosts: localhost  
  connection: local  
  gather_facts: no    
  vars:  
    #your region  
    region: us-east-1
    keyname: cf-prov-1
    #your ip address
    allowed_ip: 0.0.0.0/0
    instance_type: t2.micro     
    image: ami-fce3c696
  tasks:  
    - name: create key pair  
      tags: keypair  
      local_action:  
        module: ec2_key  
        region: "{{ region }}"  
        name: "{{ keyname }}"      
      register: mykey  
    - name: write the private key to a file  
      tags: keypair  
      local_action: shell echo -e "{{ item.value.private_key }}" > ~/.ssh/"{{ keyname }}".pem && chmod 600 ~/.ssh/"{{ keyname }}".pem && sed -i 's/^-e //g' ~/.ssh/"{{ keyname }}".pem      
      with_dict: mykey   
      when: item.value.private_key is defined     

    - name: create security group  
      tags: sg
      local_action:  
        module: ec2_group    
        region: "{{ region }}"
        #your security group name  
        name: sg_mongodb
        description: security group for mongodb host
        rules:
          - proto: tcp  
            from_port: 22  
            to_port: 22  
            cidr_ip: "{{ allowed_ip }}"
          - proto: tcp  
            from_port: 27017
            to_port: 27017
            cidr_ip: 0.0.0.0/0
        rules_egress:  
          - proto: all  
            cidr_ip: 0.0.0.0/0    

    - name: launch ec2 instance  
      tags: ec2
      local_action:  
        module: ec2  
        region: "{{ region }}"  
        key_name: "{{ keyname }}"
        instance_type: "{{ instance_type }}"    
        image: "{{ image }}"  
        wait: yes    
        group: sg_mongodb
        instance_tags:  
          Name: mongodb-3
          class: mongodb
      register: ec2 
   
    - name: associate new EIP for the instance  
      tags: eip      
      local_action:
        module: ec2_eip
        region: "{{ region }}"
        instance_id: "{{ item.id }}"
      with_items: ec2.instances   
      when: item.id is defined   

    - name: Wait for SSH to come up
      local_action: wait_for host={{ item.public_dns_name }} state=started
      with_items: ec2.instances

- name: With the newly provisioned EC2 node install Mongodb
  hosts: tag_class_mongodb
  sudo: yes
  vars:
    mongodb_users:
      - { username: foo, password: bar, database: cloudifice }

  roles:
    - mongodb
